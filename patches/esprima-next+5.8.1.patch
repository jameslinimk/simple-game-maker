diff --git a/node_modules/esprima-next/dist/esm/esprima.d.ts b/node_modules/esprima-next/dist/esm/esprima.d.ts
index 648b757..64e9133 100644
--- a/node_modules/esprima-next/dist/esm/esprima.d.ts
+++ b/node_modules/esprima-next/dist/esm/esprima.d.ts
@@ -914,11 +914,12 @@ interface TokenEntry {
     loc?: SourceLocation;
 }
 
-declare function parse(code: string, options?: Config, delegate?: any): Program & {
+declare type parsedTokens = Program & {
     comments?: Comment[];
     tokens?: TokenEntry[];
     errors?: EsprimaError[];
 };
+declare function parse(code: string, options?: Config, delegate?: any): parsedTokens;
 declare function parseModule(code: string, options?: Config, delegate?: any): Program & {
     comments?: Comment[] | undefined;
     tokens?: TokenEntry[] | undefined;
@@ -941,4 +942,5 @@ declare const _default: {
     version: string;
 };
 
-export { ArgumentListElement, ArrayExpression, ArrayExpressionElement, ArrayPattern, ArrayPatternElement, ArrowFunctionExpression, AssignmentExpression, AssignmentPattern, AsyncFunctionDeclaration, AwaitExpression, BigIntLiteral, BinaryExpression, BindingIdentifier, BindingPattern, BlockStatement, BreakStatement, CallExpression, CatchClause, ChainElement, ChainExpression, Class, ClassBody, ClassDeclaration, ClassExpression, ConditionalExpression, Config, ContinueStatement, DebuggerStatement, Declaration, Directive, DoWhileStatement, EmptyStatement, ExportAllDeclaration, ExportDeclaration, ExportDefaultDeclaration, ExportNamedDeclaration, ExportSpecifier, ExportableDefaultDeclaration, ExportableNamedDeclaration, Expression, ExpressionStatement, ForInStatement, ForOfStatement, ForStatement, Function, FunctionDeclaration, FunctionExpression, FunctionParameter, Identifier, IfStatement, ImportAttribute, ImportDeclaration, ImportDeclarationSpecifier, ImportDefaultSpecifier, ImportExpression, ImportNamespaceSpecifier, ImportSpecifier, LabeledStatement, Literal, LogicalExpression, MemberExpression, MetaProperty, MethodDefinition, Module, NewExpression, Node, nodes_d as Nodes, ObjectExpression, ObjectExpressionProperty, ObjectPattern, ObjectPatternProperty, Pattern, PrivateIdentifier, Program, Property, PropertyDefinition, PropertyKey, PropertyValue, RegexLiteral, RestElement, ReturnStatement, Script, SequenceExpression, SpreadElement, Statement, StaticBlock, Super, SwitchCase, SwitchStatement, Syntax, TaggedTemplateExpression, TemplateElement, TemplateLiteral, ThisExpression, ThrowStatement, TryStatement, UnaryExpression, UpdateExpression, VariableDeclaration, VariableDeclarator, WhileStatement, WithStatement, YieldExpression, _default as default, parse, parseModule, parseScript, tokenize, version };
+export { parsedTokens, ArgumentListElement, ArrayExpression, ArrayExpressionElement, ArrayPattern, ArrayPatternElement, ArrowFunctionExpression, AssignmentExpression, AssignmentPattern, AsyncFunctionDeclaration, AwaitExpression, BigIntLiteral, BinaryExpression, BindingIdentifier, BindingPattern, BlockStatement, BreakStatement, CallExpression, CatchClause, ChainElement, ChainExpression, Class, ClassBody, ClassDeclaration, ClassExpression, ConditionalExpression, Config, ContinueStatement, DebuggerStatement, Declaration, Directive, DoWhileStatement, EmptyStatement, ExportAllDeclaration, ExportDeclaration, ExportDefaultDeclaration, ExportNamedDeclaration, ExportSpecifier, ExportableDefaultDeclaration, ExportableNamedDeclaration, Expression, ExpressionStatement, ForInStatement, ForOfStatement, ForStatement, Function, FunctionDeclaration, FunctionExpression, FunctionParameter, Identifier, IfStatement, ImportAttribute, ImportDeclaration, ImportDeclarationSpecifier, ImportDefaultSpecifier, ImportExpression, ImportNamespaceSpecifier, ImportSpecifier, LabeledStatement, Literal, LogicalExpression, MemberExpression, MetaProperty, MethodDefinition, Module, NewExpression, Node, nodes_d as Nodes, ObjectExpression, ObjectExpressionProperty, ObjectPattern, ObjectPatternProperty, Pattern, PrivateIdentifier, Program, Property, PropertyDefinition, PropertyKey, PropertyValue, RegexLiteral, RestElement, ReturnStatement, Script, SequenceExpression, SpreadElement, Statement, StaticBlock, Super, SwitchCase, SwitchStatement, Syntax, TaggedTemplateExpression, TemplateElement, TemplateLiteral, ThisExpression, ThrowStatement, TryStatement, UnaryExpression, UpdateExpression, VariableDeclaration, VariableDeclarator, WhileStatement, WithStatement, YieldExpression, _default as default, parse, parseModule, parseScript, tokenize, version }
+
diff --git a/node_modules/esprima-next/package.json b/node_modules/esprima-next/package.json
index 74dc4ac..092906f 100644
--- a/node_modules/esprima-next/package.json
+++ b/node_modules/esprima-next/package.json
@@ -37,6 +37,7 @@
       "web": "http://ariya.ofilabs.com"
     }
   ],
+  "type": "module",
   "repository": {
     "type": "git",
     "url": "https://github.com/node-projects/esprima-next.git"
